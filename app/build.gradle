plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
    id "org.jlleitschuh.gradle.ktlint" version "10.2.1"
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
    id 'com.google.firebase.crashlytics'
    id 'jacoco'
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.ozcoin.cookiepang"
        minSdk 24
        targetSdk 31
        versionCode 2
        versionName "1.0.1"

        testInstrumentationRunner "com.ozcoin.cookiepang.HiltTestRunner"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/rxjava.properties']
        }
    }

    task copyGitHooks(type: Copy) {
        from("${rootDir}/config/git-hooks/") {
            include '**/*'
            rename '(.*)', '$1'
        }
        into "${rootDir}/.git/hooks"
    }

    task installGitHooks(type: Exec) {
        group 'git hooks'
        workingDir rootDir
        commandLine 'chmod'
        args '-R', '+x', '.git/hooks/'
        dependsOn copyGitHooks
    }

    task coverageReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {
        group = "Reporting"
        description = "Generate Jacoco coverage reports"

        def coverageSourceDirs = ['src/main/java']

        classDirectories.from = fileTree(
                dir: "${buildDir}/tmp/kotlin-classes/debug",
                excludes: ['**/R.class',
                           '**/R$*.class',
                           '**/BuildConfig.*',
                           '**/Manifest*.*',
                           'com/android/**/*.class']
        )

        sourceDirectories.from = files(coverageSourceDirs)
        executionData.from = files("${buildDir}/outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec")

        reports {
            xml.required = true
            csv.required = true
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation "androidx.core:core-ktx:$rootProject.androidxCoreVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$rootProject.swiperefreshlayoutVersion"

    // ViewModel & LiveData
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.lifecycleVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$rootProject.coroutinesVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:$rootProject.retrofitKotlinConverterVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpLoggingVersion"

    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.1.0"

    // Timber
    implementation "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.navigationVersion"

    testImplementation "io.kotest:kotest-runner-junit5-jvm:$rootProject.kotestVersion"
    testImplementation "io.kotest:kotest-assertions-core:$rootProject.kotestVersion"

    testImplementation "io.mockk:mockk:$rootProject.mockkVersion"
    testImplementation "io.mockk:mockk-agent-jvm:$rootProject.mockkVersion"
    androidTestImplementation "io.mockk:mockk-android:$rootProject.mockkVersion"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$rootProject.kotlinVersion"

    // hilt
    implementation "com.google.dagger:hilt-android:$rootProject.hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"

    androidTestImplementation "com.google.dagger:hilt-android-testing:$rootProject.hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"

    androidTestImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test:core-ktx:$rootProject.androidTestCoreKtxVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$rootProject.junitKtxVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.androidTestRulesVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoCoreVersion"

    implementation platform('com.google.firebase:firebase-bom:29.0.4')
    implementation "com.google.firebase:firebase-messaging-ktx:$rootProject.firebaseMessagingVersion"
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-crashlytics-ktx"

    implementation("androidx.datastore:datastore-preferences:$rootProject.datastoreVersion")

    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
}